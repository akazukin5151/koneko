@startuml

title main to prompt


abstract class main.AbstractLoop <<(A, red)>>{
    ..Required behaviours..
    -{abstract}_prompt_url_or_id()
    -{abstract}_go_to_mode()
    -{abstract}str__()
    ..Common..
    +start()
    -proccess_raw_answer()
    -validate_input()
    -save_history()
}

class main.ArtistModeLoop {
    ..Implements..
    -_prompt_url_or_id()
    -_go_to_mode()
    -str__()
}

class main.ViewPostModeLoop {
    ..Implements..
    -_prompt_url_or_id()
    -_go_to_mode()
    -str__()
    ..Overrides..
    -proccess_raw_answer()
}

class main.FollowingUsersModeLoop {
    ..Implements..
    -prompt_url_or_id()
    -go_to_mode()
    -str__()
    ..Complements..
    +start()
}

class main.SearchUsersModeLoop {
    ..Implements..
    -prompt_url_or_id()
    -go_to_mode()
    -str__()
    ..Overrides..
    -proccess_raw_answer()
    -_validate_input()
}


package main {
    object illust_follow_mode
    object illust_recommended_mode
    object frequent_modes
    object frequent
}

main.AbstractLoop <-- main.ArtistModeLoop
main.AbstractLoop <-- main.ViewPostModeLoop
main.AbstractLoop <-- main.FollowingUsersModeLoop
main.AbstractLoop <-- main.SearchUsersModeLoop
main.AbstractLoop <-[hidden]- illust_follow_mode
main.AbstractLoop <-[hidden]- illust_recommended_mode


package prompt {
    object user_prompt
    object gallery_prompt
    object image_prompt

    main.ArtistModeLoop *-- gallery_prompt
    main.ViewPostModeLoop *-- image_prompt
    main.FollowingUsersModeLoop *-- user_prompt
    main.SearchUsersModeLoop *-- user_prompt
    illust_follow_mode *-- gallery_prompt
    illust_recommended_mode *-- gallery_prompt
}

frequent .up.> picker
frequent_modes .up.> picker
picker ..> main.AbstractLoop

@enduml
