@startuml

title main.py

abstract class main.AbstractLoop <<(A, red)>>{
  +{abstract}start()
}

class main.ArtistModeLoop {
    + mode
    +start()
}
package main {
    object illust_follow_mode_loop
}

main.AbstractLoop <|-down- main.ArtistModeLoop
main.AbstractLoop <|-down[hidden]- illust_follow_mode_loop

abstract class ui.AbstractUI <<(A, red)>>{
    + {abstract} data
    + {abstract} download_function
    +{abstract}data_class()
    +{abstract}tracker()
    +{abstract}show_instant()
    +{abstract}pixivrequest()
    +{abstract}action_before_prefetch()
    +{abstract}print_page_info()
    +start()
    +next_page()
    +preview_page()
    +reload()
}

abstract class ui.AbstractGallery <<(A, red)>>{
    +view_image()
    +{abstract}handle_prompt()
    +{abstract}{static}help()
}
ui.AbstractUI <-down- ui.AbstractGallery

class ui.ArtistGallery <<(C, cyan)>>{
    +handle_prompt()
    +{static}help()
}
class ui.IllustFollowGallery <<(C, cyan)>>{
    +go_artist_gallery_coords()
    +go_artist_gallery_num()
    +handle_prompt()
    +{static}help()
}
main.ArtistModeLoop*-down- ui.ArtistGallery

illust_follow_mode_loop*-down- ui.IllustFollowGallery

ui.AbstractGallery <-down- ui.IllustFollowGallery

ui.AbstractGallery <-down- ui.ArtistGallery

class main.ViewPostModeLoop {
    + mode
    +start()
}
package ui {
    object view_post_mode
    object display_image
}
class ui.Image <<(C, cyan)>>{
    + download_image()
    + open_image()
    + next_image()
    + previous_image()
    + leave()
}

main.AbstractLoop <|-down- main.ViewPostModeLoop
main.ViewPostModeLoop ..> view_post_mode
view_post_mode ..> ui.Image
display_image ..> ui.Image
display_image <.. ui.AbstractGallery


class main.FollowingUsersModeLoop {
    + mode
    +start()
}
class main.SearchUsersModeLoop {
    + mode
    +start()
}
main.AbstractLoop <|-down- main.FollowingUsersModeLoop
main.AbstractLoop <|-down- main.SearchUsersModeLoop

class ui.FollowingUsers <<(C, cyan)>>
class ui.SearchUsers <<(C, cyan)>>
abstract class ui.AbstractUsers <<(A, red)>>{
    +go_artist_mode()
}
ui.AbstractUI <-down- ui.AbstractUsers
ui.AbstractUsers <-down- ui.FollowingUsers
ui.AbstractUsers <-down- ui.SearchUsers
main.FollowingUsersModeLoop*-down- ui.FollowingUsers
main.SearchUsersModeLoop*-down- ui.SearchUsers


abstract class lscat.AbstractTracker <<(A, red)>>{
    +update()
}
class lscat.TrackDownloads {
    + orders
    + generator
}
class lscat.TrackDownloadsUser {
    + orders
    + generator
}

lscat.AbstractTracker <- lscat.TrackDownloadsUser
lscat.AbstractTracker <-right- lscat.TrackDownloads

ui.AbstractUsers *.down. lscat.TrackDownloadsUser
ui.AbstractGallery *.left lscat.TrackDownloads

lscat.TrackDownloadsUser -up[hidden]-> lscat.TrackDownloads

package prompt {
    object user_prompt
    object gallery_prompt
    object image_prompt

    user_prompt -down[hidden]-> main.AbstractLoop
    gallery_prompt -down[hidden]-> main.AbstractLoop
    image_prompt -down[hidden]-> main.AbstractLoop

    main.ArtistModeLoop *-up-- gallery_prompt
    main.ViewPostModeLoop *-up-- image_prompt
    main.FollowingUsersModeLoop *-left-- user_prompt
    main.SearchUsersModeLoop *-left-- user_prompt
    illust_follow_mode_loop *-up-- gallery_prompt
}


class data.GalleryJson {
    + all_pages_cache
    + current_page_num
    + current_illusts
    + cached_pages
    + next_url
    + download_path
    + first_img
    +update()
    +post_json()
    +artist_user_id()
    +image_id()
}
class data.ImageJson {
    + url
    + filename
    + artist_illust_id
    + page_num
    + number_of_pages
    + page_urls
    + large_dir
    + downloaded_images
    +image_filename()
    +filepath()
    +next_img_url()
    +current_url()
}
class data.UserJson {
    + page_num
    + ids_cache
    + names_cache
    + download_path
    + names
    + all_urls
    + all_names
    + splitpoint
    + first_img
    +update()
    + next_url
    + profile_pic_urls
    + image_urls
    +artist_user_id()
}

data.GalleryJson *-up-- ui.AbstractGallery
data.ImageJson *-up-- ui.Image
data.UserJson *-up-- ui.AbstractUsers


class api.APIHandler {
    + api_queue
    + api_thread
    + api
    +start()
    +await_login()
    +parse_next()
    +artist_gallery()
    +protected_illust_detail()
    +following_user_request()
    +search_user_request()
    +illust_follow_request()
    +protected_download()
}

api.APIHandler ---left[hidden]-> ui.AbstractUI

@enduml
