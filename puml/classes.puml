@startuml

title main.py

abstract class Loop <<(A, red)>>{
  +{abstract}start()
}

class ArtistModeLoop {
    + mode
    +start()
}
object illust_follow_mode_loop

Loop <|-down- ArtistModeLoop: inherits
Loop <|-down[hidden]- illust_follow_mode_loop: inherits
illust_follow_mode_loop -right[hidden]-> ViewPostModeLoop
illust_follow_mode_loop -right[hidden]-> ArtistModeLoop
ViewPostModeLoop -left[hidden]-> ArtistModeLoop
ViewPostModeLoop -right[hidden]-> SearchUsersModeLoop
ViewPostModeLoop -right[hidden]-> FollowingUsersModeLoop

abstract class ui.AbstractGallery <<(A, red)>>{
    +next_page()
    +preview_page()
    +open_link_coords()
    +open_link_num()
    +download_image_coords()
    +download_image_num()
    +view_image()
    +reload()
    +{abstract}handle_prompt()
}

class ui.ArtistGallery <<(C, cyan)>>{
    +handle_prompt()
}
class ui.IllustFollowGallery <<(C, cyan)>>{
    +go_artist_gallery_coords()
    +go_artist_gallery_num()
    +handle_prompt()
}
ArtistModeLoop*-down- ui.ArtistGallery: composes mode

illust_follow_mode_loop*-down- ui.IllustFollowGallery: composes mode

ui.AbstractGallery <-down- ui.IllustFollowGallery: inherits

ui.AbstractGallery <-down- ui.ArtistGallery: inherits

ui.IllustFollowGallery -right[hidden]-> ui.ArtistGallery

class ViewPostModeLoop {
    + mode
    +start()
}
package ui {
    object view_post_mode
    object display_image
}
class ui.Image <<(C, cyan)>>{
    + download_image()
    + open_image()
    + next_image()
    + previous_image()
    + leave()
}

Loop <|-down- ViewPostModeLoop: inherits
ViewPostModeLoop ..> view_post_mode
view_post_mode ..> ui.Image
display_image ..> ui.Image
display_image <.. ui.AbstractGallery


class FollowingUsersModeLoop {
    + mode
    +start()
}
class SearchUsersModeLoop {
    + mode
    +start()
}
Loop <|-down- FollowingUsersModeLoop: inherits
Loop <|-down- SearchUsersModeLoop: inherits

class ui.FollowingUsers <<(C, cyan)>>
class ui.SearchUsers <<(C, cyan)>>
abstract class ui.Users <<(A, red)>>{
    +go_artist_mode()
    +next_page()
    +previous_page()
    +reload()
    +start()
}
ui.Users <-down- ui.FollowingUsers: inherits
ui.Users <-down- ui.SearchUsers: inherits
FollowingUsersModeLoop*-down- ui.FollowingUsers: composes mode
SearchUsersModeLoop*-down- ui.SearchUsers: composes mode


abstract class lscat.Tracker <<(A, red)>>{
    + path
    +update()
}
class lscat.TrackDownloads {
    + orders
    + generator
}
class lscat.TrackDownloadsUser {
    + orders
    + generator
}

lscat.Tracker <- lscat.TrackDownloadsUser: inherits
lscat.Tracker <- lscat.TrackDownloads: inherits

ui.Users*.down. lscat.TrackDownloadsUser: composes view
ui.AbstractGallery*.up lscat.TrackDownloads: composes view

lscat.TrackDownloadsUser -up[hidden]-> lscat.TrackDownloads
lscat.TrackDownloadsUser --up[hidden]-> ui.AbstractGallery

package prompt {
    object user_prompt
    ui.Users <..> user_prompt

    object gallery_prompt
    ui.AbstractGallery <.down.> gallery_prompt

    object image_prompt
    ui.Image <.down..> image_prompt
}


class data.GalleryJson {
    + all_pages_cache
    + current_page_num
    + current_illusts
    + cached_pages
    + next_url
    + download_path
    + first_img
    +update()
    +post_json()
    +artist_user_id()
    +image_id()
}
class data.ImageJson {
    + url
    + filename
    + artist_illust_id
    + page_num
    + number_of_pages
    + page_urls
    + large_dir
    + downloaded_images
    +image_filename()
    +filepath()
    +next_img_url()
    +current_url()
}
class data.UserJson {
    + page_num
    + ids_cache
    + names_cache
    + download_path
    + names
    + all_urls
    + all_names
    + splitpoint
    + first_img
    +update()
    + next_url
    + profile_pic_urls
    + image_urls
    +artist_user_id()
}

data.GalleryJson *-up- ui.AbstractGallery: composes data
data.ImageJson *-up- ui.Image: composes data
data.UserJson *-up- ui.Users: composes data


class api.APIHandler {
    + api_queue
    + api_thread
    + api
    +start()
    +await_login()
    +parse_next()
    +artist_gallery_parse_next()
    +artist_gallery_request()
    +protected_illust_detail()
    +following_user_request()
    +search_user_request()
    +illust_follow_request()
    +protected_download()
}

api.APIHandler -right[hidden]-> ui.Users

@enduml
