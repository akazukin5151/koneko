@startuml

title koneko

abstract class main.AbstractLoop <<(A, red)>>{
    +start()
    -{abstract}_prompt_url_or_id()
    -_process_url_or_input()
    -_validate_input()
    -{abstract}_go_to_mode()
}

class main.ArtistModeLoop {
    ..Implements..
    -_prompt_url_or_id()
    -_go_to_mode()
}

package main {
    object illust_follow_mode_loop
}

main.AbstractLoop <-up- main.ArtistModeLoop
main.AbstractLoop <-up[hidden]- illust_follow_mode_loop

abstract class ui.AbstractUI <<(A, red)>>{
    ..Required attribute..
    - {abstract} prompt
    - {abstract} data_class
    - {abstract} tracker_class
    ..Required behaviour..
    -{abstract}pixivrequest()
    -{abstract}action_before_prefetch()
    -{abstract}print_page_info()
    ..Common behaviour..
    +start()
    +next_page()
    +previous_page()
    -_parse_and_download()
    -_prefetch_next_page()
    +reload()
}

abstract class ui.AbstractGallery <<(A, red)>>{
    ..Implements..
    - prompt
    - data_class
    - tracker_class
    -action_before_prefetch()
    -print_page_info()
    ..Unique..
    +view_image()
    -_back()
    +{abstract}handle_prompt()
    +{abstract}{static}help()
}
ui.AbstractUI <|-up- ui.AbstractGallery

class ui.ArtistGallery <<(C, cyan)>>{
    ..Implements..
    -_pixivrequest()
    +handle_prompt()
    +{static}help()
    ..Unique..
    - _artist_user_id
}
class ui.IllustFollowGallery <<(C, cyan)>>{
    ..Implements..
    -_pixivrequest()
    +handle_prompt()
    +{static}help()
    ..Unique..
    +go_artist_gallery_coords()
    +go_artist_gallery_num()
}
main.ArtistModeLoop*-down- ui.ArtistGallery

illust_follow_mode_loop*-down- ui.IllustFollowGallery

ui.AbstractGallery <-down- ui.IllustFollowGallery

ui.AbstractGallery <-down- ui.ArtistGallery

class main.ViewPostModeLoop {
    ..Implements..
    -_prompt_url_or_id()
    -_go_to_mode()
    ..Overrides..
    -_process_url_or_input()
}
package ui {
    object view_post_mode
    object display_image
}
class ui.Image <<(C, cyan)>>{
    +download_image()
    +open_image()
    +next_image()
    +previous_image()
    +show_full_res()
    +jump_to_page()
    +leave()
    -_jump()
    -_prefetch_next_page()
}

main.AbstractLoop <-up- main.ViewPostModeLoop
main.ViewPostModeLoop ..> view_post_mode
view_post_mode ..> ui.Image
display_image ..> ui.Image
display_image <.. ui.AbstractGallery


class main.FollowingUsersModeLoop {
    ..Implements..
    -_prompt_url_or_id()
    -_go_to_mode()
    ..Overrides..
    -_process_url_or_input()
    -_validate_input()
}
class main.SearchUsersModeLoop {
    ..Implements..
    -_prompt_url_or_id()
    -_go_to_mode()
}
main.AbstractLoop <-up- main.FollowingUsersModeLoop
main.AbstractLoop <-up- main.SearchUsersModeLoop

class ui.FollowingUsers <<(C, cyan)>> {
    ..Implements..
    -_pixivrequest()
    ..Unique..
    - user
}
class ui.SearchUsers <<(C, cyan)>> {
    ..Implements..
    -_pixivrequest()
    ..Unique..
    - publicity
    - your_id
}
abstract class ui.AbstractUsers <<(A, red)>>{
    ..Implements..
    - prompt
    - data_class
    - tracker_class
    -action_before_prefetch()
    -print_page_info()
    ..Unique..
    +go_artist_mode()
}
ui.AbstractUI <|-up- ui.AbstractUsers
ui.AbstractUsers <-down- ui.FollowingUsers
ui.AbstractUsers <-down- ui.SearchUsers
main.FollowingUsersModeLoop*-down- ui.FollowingUsers
main.SearchUsersModeLoop*-down- ui.SearchUsers


abstract class lscat.AbstractTracker <<(A, red)>>{
    - {abstract} orders
    - {abstract} generator
    +update()
    -_inspect()
}
class lscat.TrackDownloads {
    ..Implements..
    - orders
    - generator
}
class lscat.TrackDownloadsUser {
    ..Implements..
    - orders
    - generator
}

lscat.AbstractTracker <- lscat.TrackDownloadsUser
lscat.AbstractTracker <-right- lscat.TrackDownloads

ui.AbstractUsers *.down. lscat.TrackDownloadsUser
ui.AbstractGallery *.left lscat.TrackDownloads

lscat.TrackDownloadsUser -up[hidden]-> lscat.TrackDownloads

package prompt {
    object user_prompt
    object gallery_prompt
    object image_prompt

    user_prompt -down[hidden]-> main.AbstractLoop
    gallery_prompt -down[hidden]-> main.AbstractLoop
    image_prompt -down[hidden]-> main.AbstractLoop

    main.ArtistModeLoop *-up-- gallery_prompt
    main.ViewPostModeLoop *-up-- image_prompt
    main.FollowingUsersModeLoop *-left-- user_prompt
    main.SearchUsersModeLoop *-left-- user_prompt
    illust_follow_mode_loop *-up-- gallery_prompt
}


class data.GalleryData {
    ..Implements..
    + page_num
    + main_path
    + offset
    + next_url
    + download_path
    + all_urls
    + all_names
    +update()
    +artist_user_id()
    ..Unique..
    + all_pages_cache
    + current_illusts
    +post_json()
    +image_id()
    +url()
}
class data.ImageData {
    + image_id
    + artist_illust_id
    + page_num
    + page_urls
    + number_of_pages
    + download_path
    + image_filename
    + filepath
    + next_img_url
    + current_url
}
class data.UserData {
    ..Implements..
    + page_num
    + main_path
    + offset
    + next_url
    + download_path
    + all_urls
    + all_names
    +update()
    +artist_user_id()
    ..Unique..
    + ids_cache
    + names_cache
    + names
    + splitpoint
    + profile_pic_urls
    + image_urls
}
abstract class data.AbstractData <<(A, red)>>{
    ..Required attributes..
    +{abstract} page_num
    +{abstract} main_path
    +{abstract} offset
    +{abstract} next_url
    +{abstract} download_path
    +{abstract} all_urls
    +{abstract} all_names
    ..Required methods..
    +{abstract}update()
    +{abstract}artist_user_id()
    ..Common methods..
    +urls_as_names()
    +newnames_with_ext()
}

data.GalleryData *-up-- ui.AbstractGallery
data.ImageData *-up-- ui.Image
data.UserData *-up-- ui.AbstractUsers

data.GalleryData <-up- data.AbstractData
data.UserData <-up- data.AbstractData


class api.APIHandler << (S,#FF7700) Singleton >> {
    ..Initial login..
    - api
    - api_queue
    - api_thread
    - credentials
    +start()
    -await_login()
    ..Requests..
    +artist_gallery()
    +protected_illust_detail()
    +following_user_request()
    +search_user_request()
    +illust_follow_request()
    +protected_download()
}

api.APIHandler ---left[hidden]-> ui.AbstractUI

@enduml
