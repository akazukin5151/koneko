@startuml

abstract class AbstractImageAdjuster <<(A, red)>>{
    ..Required attributes..
    + {abstract} thumbnail_size
    + {abstract} show_func
    + {abstract} side_label
    + {abstract} start_spaces
    ..Required behaviours..
    +{abstract}report()
    +{abstract}maybe_move_up()
    +{abstract}maybe_move_down()
    +{abstract}maybe_erase()
    +{abstract}show_func_args()
    +{abstract}return_tup()
    +{abstract}is_input_valid()
    ..Common behaviour..
    +start()
}

abstract class AbstractPadding <<(A, red)>>{
    ..Implements..
    + start_spaces
    +maybe_erase()
    +return_tup()
    +is_input_valid()
    ..Complements..
    +start()
    ..New required attributes..
    +{abstract} doc
    +{abstract} default_x
    +{abstract} find_dim_func
}

class XPadding {
    ..Implements..
    + thumbnail_size
    + show_func
    + side_label
    +report()
    +maybe_move_up()
    +maybe_move_down()
    +show_func_args()
    ..New implements..
    + doc
    + default_x
    + find_dim_func
}

class YPadding {
    ..Implements..
    + thumbnail_size
    + show_func
    + side_label
    +report()
    +maybe_move_up()
    +maybe_move_down()
    +show_func_args()
    ..New implements..
    + doc
    + default_x
    + find_dim_func
}

AbstractImageAdjuster <|-- AbstractPadding
AbstractPadding <|-- XPadding
AbstractPadding <|-- YPadding

abstract class FindImageDimension <<(A, red)>>{
    ..Implements..
    +report()
    +maybe_move_down()
    +maybe_erase()
    +show_func_args()
    +return_tup()
    +is_input_valid()
}

class FindImageWidth {
    ..Implements..
    + thumbnail_size
    + show_func
    + side_label
    + start_spaces
    +maybe_move_up()
}

class FindImageHeight {
    ..Implements..
    + thumbnail_size
    + show_func
    + side_label
    + start_spaces
    +maybe_move_up()
}

AbstractImageAdjuster <|-- FindImageDimension
FindImageDimension <|-- FindImageWidth
FindImageDimension <|-- FindImageHeight

FindImageHeight --* YPadding
FindImageWidth --* XPadding

@enduml
